version: 2

references:

  get_svn_commit: &get_svn_commit
    run:
      name: Get SVN revision from the git SHA1 using github API
      command: >
        curl --silent
        https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/commits/${CIRCLE_SHA1} |
        jq .commit.message |
        sed -E 's|.*git-svn-id: http://svn.code.sf.net/p/smartmontools/code/trunk@([0-9]+).*|\1|' >
        ~/SVNREV && test "`cat ~/SVNREV`" -gt "0"

  svn_checkout: &svn_checkout
    run:
      name: Checkout from the SF.net
      command: >
        svn --config-option 'config:miscellany:use-commit-times=yes' checkout
        https://svn.code.sf.net/p/smartmontools/code/trunk/smartmontools@`cat ~/SVNREV`
        ~/smartmontools

  sm_distfile: &sm_distfile
    run:
      name: Creating src.tar.gz
      command: |
        cd ~/smartmontools
        sed -n 's|^AC_INIT[^,]*, *\([0-9.]*\) *,.*$|\1|p' "configure.ac" > ~/SM_VER
        SM_VER=`cat ~/SM_VER` && SVNREV=`cat ~/SVNREV`
        ./autogen.sh --force
        mkdir build && cd build
        ../configure
        make dist
        mkdir /artefacts && mv smartmontools-${SM_VER}.tar.gz /artefacts/smartmontools-${SM_VER}-r${SVNREV}.src.tar.gz

  sm_comple_linux: &sm_compile_linux
    run:
      name: Creating normal linux binary
      command: |
        SM_VER=`cat ~/SM_VER` && SVNREV=`cat ~/SVNREV`
        mkdir ~/build && cd ~/build
        tar -xvzf /artefacts/smartmontools-${SM_VER}-r${SVNREV}.src.tar.gz
        cd smartmontools-${SM_VER} && mkdir build && cd build
        ../configure && make -j2
        mkdir inst && make DESTDIR="$(pwd)/inst" install
        (cd inst && tar czf "/artefacts/smartmontools-linux-${SM_VER}-r${SVNREV}.tar.gz" *)
        rm -rf ~/build

  sm_comple_win: &sm_compile_win
    run:
      name: Creating Windows binary
      command: |
        SM_VER=`cat ~/SM_VER` && SVNREV=`cat ~/SVNREV`
        mkdir ~/build && cd ~/build
        tar -xzf /artefacts/smartmontools-${SM_VER}-r${SVNREV}.src.tar.gz
        cd smartmontools-${SM_VER} && mkdir build && cd build
        ../configure build_alias=$(../config.guess) host_alias=i686-w64-mingw32 LDFLAGS=-static
        make -j2 && make distdir-win32
        mkdir inst && make DESTDIR="$(pwd)/inst" install
        cd inst && tar czf "/artefacts/smartmontools-win32-${SM_VER}-r${SVNREV}.tar.gz" *
        rm -rf ~/build

  sm_comple_darwin: &sm_compile_darwin
    run:
      name: Creating Darwin image
      command: >
        export PATH=/usr/osxcross/bin/:$PATH &&
        SM_VER=`cat ~/SM_VER` && SVNREV=`cat ~/SVNREV` &&
        mkdir ~/build && cd ~/build &&
        tar -xzf /artefacts/smartmontools-${SM_VER}-r${SVNREV}.src.tar.gz &&
        cd smartmontools-${SM_VER} && mkdir build && cd build &&
        ../configure build_alias=$(../config.guess) host_alias=x86_64-apple-darwin14 
        'CC=o64-clang' 'CXX=o64-clang++' 'CFLAGS=-arch i386 -arch x86_64'  
        'CXXFLAGS=-arch i386 -arch x86_64' '--sysconfdir=/private/etc' &&
        make -j2 && 
        make pkg_darwin=smartmontools-${SM_VER}-r${SVNREV}.pkg dmg_darwin=smartmontools-${SM_VER}-r${SVNREV}.dmg install-darwin &&
        mv smartmontools-${SM_VER}-r${SVNREV}.dmg "/artefacts/" &&
        rm -rf ~/build


  centos_deps: &centos_deps
    run:
      name: Install dependencies on CentOS.
      command: |
        yum update -y
        yum install -y gcc git make gcc-c++ automake

jobs:

  test_ubuntu_latest:
    docker:
      # - image: ubuntu:latest
      - image: sammcz/docker-build:latest
    working_directory: ~/smartmontools
    steps:
      - *get_svn_commit
      - *svn_checkout
      - *sm_distfile
      - *sm_compile_linux
      - *sm_compile_win
      - *sm_compile_darwin
      - store_artifacts:
          path: /artefacts
          destination: builds

  test_centos_latest:
    docker:
      - image: centos:latest
    working_directory: ~/smartmontools
    steps:
      - *centos_deps
      - checkout
      # - *sm_compile
      # - *sm_install

workflows:

  version: 2
  test-matrix:
    jobs:
      - test_ubuntu_latest
##      - test_centos_latest

notify:
  webhooks:
    - url: https://builds-ci.smartmontools.org/hook.php
